from garminconnect import Garmin
import logging
import os

logging.basicConfig(
    level=logging.DEBUG,  # üëà –∏–ª–∏ INFO, –µ—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—à—å –º–Ω–æ–≥–æ –º—É—Å–æ—Ä–∞
    format='[%(asctime)s] %(levelname)s in %(module)s: %(message)s'
)

logger = logging.getLogger(__name__)

# –ü–∞–ø–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–π
SESSIONS_DIR = "sessions"
os.makedirs(SESSIONS_DIR, exist_ok=True)

def get_body_battery(email, password):
    session_file = os.path.join(SESSIONS_DIR, email.replace("@", "_at_") + ".json")

    try:
        # –ï—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë
        if os.path.exists(session_file):
            with open(session_file, "r") as f:
                session_data = json.load(f)
            client = Garmin(email, password, session_data=session_data)
            client.login()
        else:
            # –ü–µ—Ä–≤—ã–π –≤—Ö–æ–¥ ‚Äî –ª–æ–≥–∏–Ω–∏–º—Å—è –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é
            client = Garmin(email, password)
            client.login()
            session_data = client.export_session()
            with open(session_file, "w") as f:
                json.dump(session_data, f)
        
        logger.info(f"session: {session_data}")

        # –ü–æ–ª—É—á–∞–µ–º Body Battery
        battery = client.get_body_battery()
        battery_level = battery.get("batteryLevel")

        logger.info(f"BodyBattery for {email}: {battery_level}")
        return battery_level

    except Exception as e:
        logger.error(f"Garmin error for {email}: {e}")
        return None